/*
Часто мы записываем даты в следующем формате: “день.месяц.год”. Сейчас тебе необходимо создать функцию getDateFormat(), 
которая будет приводить дату к этому формату. Она принимает 2 параметра:

date - экземпляр класса Date, который нужно перевести в данный текстовый формат: “день.месяц.год”
separator - разделитель дня, месяца и года. По умолчанию он должен быть равен точке ".". 
Если в качестве разделителя будет передано тире "-", то формат уже должен быть таким: “день-месяц-год”.
Также учти, что номер месяца в JavaScript считается с 0 до 11. Кроме этого, если день либо месяц возвращают однозначное число, 
то тебе к нему необходимо добавить 0. То есть результат должен быть не таким: “5.5.2001”, а “05.05.2001”.
*/

const getDateFormat = (date, separator = ".") => {
  const month =
    date.getMonth() >= 10
      ? String(date.getMonth() + 1)
      : "0" + String(date.getMonth() + 1);

  const day =
    date.getDate() < 10 ? "0" + date.getDate() : String(date.getDate());
  const year = date.getFullYear();
  return `${day}${separator}${month}${separator}${year}`;
};

const date = new Date("February 11, 2002 23:15:30");
console.log(date);
console.log(getDateFormat(date));

/**
 * второй метод, который, после выполнения честно нашел в интернете.
 * toLocaleDateString() - выводит дату в соответствии с локальными настройками браузера. 
 * Первым параметром указываем значение "default", вторым объект с опциями, где указываем настройки вывода даты.
 * По умолчанию дата выведется используя сепаратор /. Поэтому, с помощью регулярных вырожений заменяем / на заданный сепаратор
 const getDateFormat = (date, separator = ".") => {
  return date.toLocaleDateString("default", {
    day: "2-digit",
    month: "2-digit",
    year: "numeric",
  }).replace(/\//g, separator);
};
 */
