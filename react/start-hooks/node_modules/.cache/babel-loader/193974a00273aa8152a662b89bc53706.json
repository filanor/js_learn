{"ast":null,"code":"var _jsxFileName = \"/Users/filanor/Desktop/js_learn/react/start-hooks/src/app/components/examples/useRef/renderCount.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RenderCountExample = () => {\n  _s();\n\n  const renderCount = useRef(0);\n  const [otherState, setOtherState] = useState(false);\n\n  const toggleOtherState = () => {\n    setOtherState(!otherState);\n  };\n\n  useEffect(() => {\n    renderCount.current++;\n  });\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(SmallTitle, {\n      children: \"\\u041F\\u043E\\u0434\\u0441\\u0447\\u0435\\u0442 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430 \\u0440\\u0435\\u043D\\u0434\\u0435\\u0440\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u0439: \", renderCount.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleOtherState,\n      children: \"\\u0441\\u0444\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RenderCountExample, \"9i/y55oISVWr+DG3mXhzfMZPERA=\");\n\n_c = RenderCountExample;\nexport default RenderCountExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderCountExample\");","map":{"version":3,"names":["React","useRef","useState","useEffect","CardWrapper","SmallTitle","RenderCountExample","renderCount","otherState","setOtherState","toggleOtherState","current"],"sources":["/Users/filanor/Desktop/js_learn/react/start-hooks/src/app/components/examples/useRef/renderCount.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\n\nconst RenderCountExample = () => {\n  const renderCount = useRef(0);\n  const [otherState, setOtherState] = useState(false);\n  const toggleOtherState = () => {\n    setOtherState(!otherState);\n  };\n\n  useEffect(() => {\n    renderCount.current++;\n  });\n\n  return (\n    <CardWrapper>\n      <SmallTitle>Подсчет количества рендеров</SmallTitle>\n      <p>Количество обновлений: {renderCount.current}</p>\n      <button onClick={toggleOtherState}>сфв</button>\n    </CardWrapper>\n  );\n};\n\nexport default RenderCountExample;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;EAAA;;EAC/B,MAAMC,WAAW,GAAGN,MAAM,CAAC,CAAD,CAA1B;EACA,MAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;;EACA,MAAMQ,gBAAgB,GAAG,MAAM;IAC7BD,aAAa,CAAC,CAACD,UAAF,CAAb;EACD,CAFD;;EAIAL,SAAS,CAAC,MAAM;IACdI,WAAW,CAACI,OAAZ;EACD,CAFQ,CAAT;EAIA,oBACE,QAAC,WAAD;IAAA,wBACE,QAAC,UAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,0IAA2BJ,WAAW,CAACI,OAAvC;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAED,gBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAlBD;;GAAMJ,kB;;KAAAA,kB;AAoBN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}