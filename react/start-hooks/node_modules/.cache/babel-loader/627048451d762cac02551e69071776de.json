{"ast":null,"code":"var _jsxFileName = \"/Users/filanor/Desktop/js_learn/react/start-hooks/src/app/components/examples/children/reactChildrenExample.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormComponent = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [data, setData] = useState({});\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n};\n\n_s(FormComponent, \"0PQhZyvNHTQmyp/cNfIsZk8MtX8=\");\n\n_c = FormComponent;\nFormComponent.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\n\nconst ReactChildrenExample = () => {\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: /*#__PURE__*/_jsxDEV(SmallTitle, {\n      children: \"Clone form and add props\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ReactChildrenExample;\nexport default ReactChildrenExample;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormComponent\");\n$RefreshReg$(_c2, \"ReactChildrenExample\");","map":{"version":3,"names":["React","useState","CardWrapper","SmallTitle","PropTypes","FormComponent","children","data","setData","handleChange","target","prevState","name","value","propTypes","oneOfType","arrayOf","node","ReactChildrenExample"],"sources":["/Users/filanor/Desktop/js_learn/react/start-hooks/src/app/components/examples/children/reactChildrenExample.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\nimport PropTypes from \"prop-types\";\n\nconst FormComponent = ({ children }) => {\n  const [data, setData] = useState({});\n  const handleChange = (target) => {\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\n  };\n};\n\nFormComponent.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nconst ReactChildrenExample = () => {\n  return (\n    <CardWrapper>\n      <SmallTitle>Clone form and add props</SmallTitle>\n    </CardWrapper>\n  );\n};\n\nexport default ReactChildrenExample;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,aAAa,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACtC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;EACA,MAAMQ,YAAY,GAAIC,MAAD,IAAY;IAC/BF,OAAO,CAAEG,SAAD,KAAgB,EAAE,GAAGA,SAAL;MAAgB,CAACD,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;IAAtC,CAAhB,CAAD,CAAP;EACD,CAFD;AAGD,CALD;;GAAMR,a;;KAAAA,a;AAONA,aAAa,CAACS,SAAd,GAA0B;EACxBR,QAAQ,EAAEF,SAAS,CAACW,SAAV,CAAoB,CAC5BX,SAAS,CAACY,OAAV,CAAkBZ,SAAS,CAACa,IAA5B,CAD4B,EAE5Bb,SAAS,CAACa,IAFkB,CAApB;AADc,CAA1B;;AAOA,MAAMC,oBAAoB,GAAG,MAAM;EACjC,oBACE,QAAC,WAAD;IAAA,uBACE,QAAC,UAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAND;;MAAMA,oB;AAQN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}