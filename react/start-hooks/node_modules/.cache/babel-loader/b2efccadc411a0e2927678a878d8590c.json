{"ast":null,"code":"var _jsxFileName = \"/Users/filanor/Desktop/js_learn/react/start-hooks/src/app/components/examples/cloneElement/cloneElementExample.jsx\";\nimport React from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\nimport TextField from \"../../common/form/textField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CloneElementExample = () => {\n  const field = /*#__PURE__*/_jsxDEV(TextField, {\n    name: \"email\",\n    label: \"email\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 17\n  }, this);\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    console.log(\"change\", target);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(SmallTitle, {\n      children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), field, /*#__PURE__*/React.cloneElement(field, {\n      onChange: handleChange\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CloneElementExample;\nexport default CloneElementExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"CloneElementExample\");","map":{"version":3,"names":["React","CardWrapper","SmallTitle","TextField","CloneElementExample","field","handleChange","target","console","log","cloneElement","onChange"],"sources":["/Users/filanor/Desktop/js_learn/react/start-hooks/src/app/components/examples/cloneElement/cloneElementExample.jsx"],"sourcesContent":["import React from \"react\";\nimport CardWrapper from \"../../common/Card\";\n\nimport SmallTitle from \"../../common/typografy/smallTitle\";\nimport TextField from \"../../common/form/textField\";\nconst CloneElementExample = () => {\n  const field = <TextField name=\"email\" label=\"email\" />;\n  const handleChange = ({ target }) => {\n    console.log(\"change\", target);\n  };\n  return (\n    <CardWrapper>\n      <SmallTitle>Пример</SmallTitle>\n      {field}\n      {React.cloneElement(field, { onChange: handleChange })}\n    </CardWrapper>\n  );\n};\n\nexport default CloneElementExample;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;;AACA,MAAMC,mBAAmB,GAAG,MAAM;EAChC,MAAMC,KAAK,gBAAG,QAAC,SAAD;IAAW,IAAI,EAAC,OAAhB;IAAwB,KAAK,EAAC;EAA9B;IAAA;IAAA;IAAA;EAAA,QAAd;;EACA,MAAMC,YAAY,GAAG,QAAgB;IAAA,IAAf;MAAEC;IAAF,CAAe;IACnCC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;EACD,CAFD;;EAGA,oBACE,QAAC,WAAD;IAAA,wBACE,QAAC,UAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGF,KAFH,eAGGL,KAAK,CAACU,YAAN,CAAmBL,KAAnB,EAA0B;MAAEM,QAAQ,EAAEL;IAAZ,CAA1B,CAHH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAZD;;KAAMF,mB;AAcN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}